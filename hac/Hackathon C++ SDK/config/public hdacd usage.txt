Hdac 1.04.0 Daemon (protocol 20000)


Usage:
  hdacd <blockchain-name> [options]                     Start Hdac Core Daemon

Options:
  -?                     This help message
  -alertnotify=<cmd>     Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)
  -blocknotify=<cmd>     Execute command when the best block changes (%s in cmd is replaced by block hash)
  -checkblocks=<n>       How many blocks to check at startup (default: 288, 0 = all)
  -checklevel=<n>        How thorough the block verification of -checkblocks is (0-4, default: 3)
  -conf=<file>           Specify configuration file (default: hdac.conf)
  -daemon                Run in the background as a daemon and accept commands
  -datadir=<dir>         Specify data directory
  -dbcache=<n>           Set database cache size in megabytes (4 to 16384, default: 450)
  -loadblock=<file>      Imports blocks from external blk000??.dat file on startup
  -maxorphantx=<n>       Keep at most <n> unconnectable transactions in memory (default: 50000)
  -par=<n>               Set the number of script verification threads (-4 to 16, 0 = auto, <0 = leave that many cores free, default: 0)
  -pid=<file>            Specify pid file (default: hdac.pid)
  -reindex               Rebuild the blockchain and reindex transactions on startup.
  -sysperms              Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)
  -shortoutput           Returns connection string if this node can start or default hdac address otherwise
  -txindex               Maintain a full transaction index, used by the getrawtransaction rpc call (default: 0)

Connection options:
  -addnode=<ip>          Add a node to connect to and attempt to keep the connection open
  -banscore=<n>          Threshold for disconnecting misbehaving peers (default: 100)
  -bantime=<n>           Number of seconds to keep misbehaving peers from reconnecting (default: 86400)
  -bind=<addr>           Bind to given address and always listen on it. Use [host]:port notation for IPv6
  -connect=<ip>          Connect only to the specified node(s)
  -discover              Discover own IP address (default: 1 when listening and no -externalip)
  -dns                   Allow DNS lookups for -addnode, -seednode and -connect (default: 1)
  -dnsseed               Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect)
  -externalip=<ip>       Specify your own public address
  -forcednsseed          Always query for peer addresses via DNS lookup (default: 0)
  -listen                Accept connections from outside (default: 1 if no -proxy or -connect)
  -maxconnections=<n>    Maintain at most <n> connections to peers (default: 125)
  -maxreceivebuffer=<n>  Maximum per-connection receive buffer, <n>*1000 bytes (default: 5000)
  -maxsendbuffer=<n>     Maximum per-connection send buffer, <n>*1000 bytes (default: 1000)
  -onion=<ip:port>       Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)
  -onlynet=<net>         Only connect to nodes in network <net> (ipv4, ipv6 or onion)
  -permitbaremultisig    Relay non-P2SH multisig (default: 1)
  -port=<port>           Listen for connections on <port>
  -proxy=<ip:port>       Connect through SOCKS5 proxy
  -seednode=<ip>         Connect to a node to retrieve peer addresses, and disconnect
  -timeout=<n>           Specify connection timeout in milliseconds (minimum: 1, default: 5000)
  -whitebind=<addr>      Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6
  -whitelist=<netmask>   Whitelist peers connecting from the given netmask or IP address. Can be specified multiple times.
                         Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway

Wallet options:
  -disablewallet         Do not load the wallet and disable wallet RPC calls
  -keypool=<n>           Set key pool size to <n> (default: 100)
  -paytxfee=<amt>        Fee (in BTC/kB) to add to transactions you send (default: 0.00)
  -rescan                Rescan the block chain for missing wallet transactions on startup
  -salvagewallet         Attempt to recover private keys from a corrupt wallet.dat on startup
  -sendfreetransactions  Send transactions as zero-fee transactions if possible (default: 0)
  -spendzeroconfchange   Spend unconfirmed change when sending transactions (default: 1)
  -txconfirmtarget=<n>   If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: 6)
  -maxtxfee=<amt>        Maximum total fees to use in a single wallet transaction, setting too low may abort large transactions (default: 10.00)
  -upgradewallet         Upgrade wallet to latest format on startup
  -wallet=<file>         Specify wallet file (within data directory) (default: wallet.dat)
  -walletnotify=<cmd>    Execute this command when a transaction is first seen or confirmed, if it relates to an address in the wallet or a subscribed asset or stream.
  -walletnotifynew=<cmd> Execute this command when a transaction is first seen, if it relates to an address in the wallet or a subscribed asset or stream.
                         (more details and % substitutions online)
  -walletdbversion=1|2   Specify wallet version, 1 - not scalable, 2 (default) - scalable
  -autosubscribe=streams|assets|"streams,assets"|"assets,streams" Automatically subscribe to new streams and/or assets
  -maxshowndata=<n>      The maximum number of bytes to show in the data field of API responses. (default: 16384)
                         Pieces of data larger than this will be returned as an object with txid, vout and size fields, for use with the gettxoutdata command.
  -zapwallettxes=<mode>  Delete all wallet transactions and only recover those parts of the blockchain through -rescan on startup
                         (1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)
  -importtxaddrs         Automatically import addresses with transactions. used together with txindex (reindex for old tx)  (default: 0)

Debugging/Testing options:
  -debug=<level>      Output debugging information (default: 1)
                         <level> can be: 0 - 5
                         0 : disabled debugging logs
                         1 : + default logs
                         2 : + Detailed logs of tx and block
                         3 : + coin view logs
                         4 : + network logs
                         5 : + RPC api logs (all logs)
.
  -gen                   Generate coins (default: 0)
  -genproclimit=<n>      Set the number of threads for coin generation if enabled (-1 = all cores, default: 1)
  -help-debug            Show all debugging options (usage: --help -help-debug)
  -logips                Include IP addresses in debug output (default: 0)
  -logtimestamps         Prepend debug output with timestamp (default: 1)
  -minrelaytxfee=<amt>   Fees (in BTC/Kb) smaller than this are considered zero fee for relaying (default: 0.00001)
  -printtoconsole        Send trace/debug info to console instead of debug.log file
  -shrinkdebugfile       Shrink debug.log file on client startup (default: 1 when no -debug)

Node relay options:
  -datacarrier           Relay and mine data carrier transactions (default: 1)
  -datacarriersize       Maximum size of data in data carrier transactions we relay and mine (default: 40)

Block creation options:
  -blockminsize=<n>      Set minimum block size in bytes (default: 0)
  -blockmaxsize=<n>      Set maximum block size in bytes (default: 750000)

RPC server options:
  -server                Accept command line and JSON-RPC commands
  -rest                  Accept public REST requests (default: 0)
  -rpcbind=<addr>        Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6. This option can be specified multiple times (default: bind to all interfaces)
  -rpcuser=<user>        Username for JSON-RPC connections
  -rpcpassword=<pw>      Password for JSON-RPC connections
  -rpcport=<port>        Listen for JSON-RPC connections on <port> (default: 8332 or testnet: 18332)
  -rpcallowip=<ip>       Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24).
                         This option can be specified multiple times
  -rpcallowmethod=<methods> If specified, allow only comma delimited list of JSON-RPC <methods>. This option can be specified multiple times.
  -rpcthreads=<n>        Set the number of threads to service RPC calls (default: 100)
  -rpckeepalive          RPC support for HTTP persistent connections (default: 0)

RPC SSL options
  -rpcssl                                  Use OpenSSL (https) for JSON-RPC connections
  -rpcsslcertificatechainfile=<file.cert>  Server certificate file (default: server.cert)
  -rpcsslprivatekeyfile=<file.pem>         Server private key (default: server.pem)
  -rpcsslciphers=<ciphers>                 Acceptable ciphers (default: TLSv1.2+HIGH:TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!3DES:@STRENGTH)

Hdac runtime parameters
  -offline                                 Start hdacd in offline mode, no connections to other nodes.
  -initprivkey=<privkey>                   Manually set the wallet default address and private key when running hdacd for the first time.
  -handshakelocal=<address>                Manually override the wallet address which is used for handshaking with other peers in a Hdac blockchain.
  -hideknownopdrops=<n>                    Remove recognized Hdac OP_DROP metadata from the responses to JSON_RPC calls (default: 0)
  -lockadminminerounds=<n>                 If set overrides lock-admin-mine-rounds blockchain setting.
  -miningrequirespeers=<n>                 If set overrides mining-requires-peers blockchain setting, values 0/1.
  -mineemptyrounds=<n>                     If set overrides mine-empty-rounds blockchain setting, values 0.0-1000.0 or -1.
  -miningturnover=<n>                      If set overrides mining-turnover blockchain setting, values 0-1.
  -shrinkdebugfilesize=<n>                 If shrinkdebugfile is 1, this controls the size of the debug file. Whenever the debug.log file reaches over 5 times this number of bytes, it is reduced back down to this size.
  -shortoutput                             Only show the node address (if connecting was successful) or an address in the wallet (if connect permissions must be granted by another node)
  -bantx=<txids>                           Comma delimited list of banned transactions.
  -lockblock=<hash>                        Blocks on branches without this block will be rejected